"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","29a6f80d1de3e62855501084c363c2d1"],["/static/css/main.eae54e4e.css","dcf873826b5cdcf2e88de5a28127d2ff"],["/static/js/main.24573e91.js","c1546b99b119c314031bb1d2113d56a5"],["/static/media/1.4375113e.png","4375113eebf075c5baaf8bcb0c96a4e1"],["/static/media/2.1fc8d4ac.png","1fc8d4ac3405d6a1aec8859d21daa062"],["/static/media/2.4515f37c.png","4515f37cf8fea8226c8429944c4931ac"],["/static/media/3.163a3e5a.png","163a3e5a9cd44ed1ef8a71cdd9b14d6e"],["/static/media/3.41a4b4a7.png","41a4b4a7f6fe43edb7fe9ff8e4f00a60"],["/static/media/4.9cbf041f.png","9cbf041f0815e0a630324d7201a0f762"],["/static/media/4.bace93ae.png","bace93aea3fabb648c63874154dd3ef2"],["/static/media/5.2d33c14f.png","2d33c14fd93cf1d6588c342f755b56af"],["/static/media/5.e6bf2998.png","e6bf299876c32045c76ed93daf9ceedc"],["/static/media/6.4a5b1ccb.png","4a5b1ccbaa6e2ea782a27d137874655d"],["/static/media/6.9dceb3dc.png","9dceb3dc2b5dc43610f0c75f8571da33"],["/static/media/7.5c8f326b.png","5c8f326bc028531b7082823a678e1b28"],["/static/media/close.73a44492.svg","73a44492b3022d3f7eb0a2655e8c369a"],["/static/media/header.694cfa42.png","694cfa428363f81ddb5f1d3c7b42d3a3"],["/static/media/header.94824442.jpg","94824442a7ebd3115a95eff96635555b"],["/static/media/logo.ce732999.png","ce7329996e18974876eb9251c50fdae8"],["/static/media/logo.f5aec286.svg","f5aec286bd87472a23d88daef318689c"],["/static/media/next.783e9cb0.svg","783e9cb027ac157d25f0265254cee784"],["/static/media/prev.8e7cdc1e.svg","8e7cdc1ed1b2241e7de8cfbe2bac6ca0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});